{"version":3,"sources":["components/Navigation.js","store/actions/auth.js","store/actions/actionTypes.js","components/AlertErrors.js","pages/Login.js","pages/SignUp.js","pages/Profile.js","App.js","serviceWorker.js","store/reducers/auth.js","store/configureStore.js","index.js"],"names":["Navigation","links","name","to","pathname","private","key","search","_this2","this","map","link","index","props","loggedIn","react_default","a","createElement","Nav","Item","lib","exact","Link","eventKey","className","variant","defaultActiveKey","buildLinks","Component","connect","state","auth","authorized","withRouter","type","alertErrors","errors","error","inx","message","length","Alert","Login","login","email","password","registered","handleSubmit","event","preventDefault","axios","post","_this","then","results","data","history","push","catch","err","response","status","setState","prevState","Object","objectSpread","handleChange","target","value","location","result","Container","AlertErrors","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","Button","block","dispatch","params","SignUp","profile","first_name","last_name","console","log","Profile","success","patch","get","_results$data","autocomplete","App","components_Navigation","react_router","path","component","Boolean","window","hostname","match","initialState","reducer","arguments","undefined","action","rootReducer","combineReducers","authReducer","configureStore","createStore","app","react_router_dom","es","store","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b229b7c.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nclass Navigation extends Component {\n\n    links = [\n        {\n            name: 'User Profile',\n            to: {\n                pathname: '/profile'\n            },\n            private: true,\n            key: 'profile'\n        },\n        {\n            name: 'Log Out',\n            to: {\n                pathname: '/',\n                search: '?logout=true'\n            },\n            private: true,\n            key: 'logout'\n        },\n        {\n            name: 'Log In',\n            to: {\n                pathname: '/'\n            },\n            private: false,\n            key: 'home'\n        },\n        {\n            name: 'Sign Up',\n            to: {\n                pathname: '/signup'\n            },\n            private: false,\n            key: 'signup'\n        }\n    ];\n\n    buildLinks() {\n        return this.links.map((link, index) => {\n            if(this.props.loggedIn === link.private) {\n                return (\n                    <Nav.Item key={index}>\n                        <LinkContainer to={link.to} exact>\n                            <Nav.Link eventKey={link.key}>{link.name}</Nav.Link>                            \n                        </LinkContainer>\n                    </Nav.Item>\n                );\n            } else {\n                return null;\n            }\n        });\n    }\n\n    render() {\n        return (\n            <Nav \n                className=\"justify-content-center\" \n                variant=\"pills\"\n                defaultActiveKey=\"home\"\n            >\n                {this.buildLinks()}\n            </Nav>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loggedIn: state.auth.authorized\n    }\n}\n\nexport default connect(mapStateToProps)(withRouter(Navigation));","import { AUTHORIZED } from './actionTypes';\n\nexport const authorized = (auth) => {\n    return {\n        type: AUTHORIZED,\n        authorized: auth\n    }\n}","export const AUTHORIZED = 'AUTHORIZED';","import React from 'react';\nimport { Alert } from \"react-bootstrap\";\n\nconst alertErrors = (props) => {\n    const errors = props.errors.map((error, inx) => {\n        return <li key={inx}>{error.message}</li>\n    });\n    return (\n        <div>\n            {\n                errors.length ? \n                    <Alert variant=\"danger\"><ul>{errors}</ul></Alert>\n                    :null\n            }\n        </div>\n    );\n}\n\nexport default alertErrors;","import React, { Component } from 'react';\nimport { Button, Form, Container, Alert } from \"react-bootstrap\";\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { authorized } from '../store/actions/auth';\nimport { withRouter } from 'react-router-dom';\n\nimport AlertErrors from '../components/AlertErrors';\n\nclass Login extends Component {\n\n    state = {\n        login: {\n            email: '',\n            password: ''\n        },\n        errors: [],\n        registered: false\n    }\n\n    componentDidMount()\n    {\n        if(this.props.location.search === '?logout=true') {\n            axios.post('/logout')\n            .then(result => {\n                this.props.authorized(false);\n                this.props.history.push({pathname: '/'});\n            })\n            .catch(err => {\n                this.setState(prevState=>{\n                    return {\n                        ...prevState,\n                        errors: [{message:\"There was a problem logging out\"}]\n                    }\n                });\n            })\n        }\n        if(this.props.location.search === '?registered=true') {\n            this.setState(prevState=>{\n                return {\n                    ...prevState,\n                    registered: true\n                }\n            });\n            this.props.history.push({pathname: '/'});\n        }        \n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        axios.post('/api/authenticate', this.state.login)\n        .then(results => {\n            if(results.data) {\n                this.props.authorized(true);\n                this.props.history.push({\n                    pathname: '/profile'\n                });\n            }\n        })\n        .catch(err => {\n            let errors = [{\n                message: 'Something went wrong, please try again'\n            }];\n            if(err.response.status === 401 && err.response.data.error) {\n                errors = [err.response.data.error];\n            }\n            this.setState((prevState) => {\n                return {\n                    ...prevState,\n                    errors\n                }\n            });\n        });\n    }\n\n    handleChange = event => {\n        const state = {...this.state};\n        state.login[event.target.name] = event.target.value;\n        this.setState(state);\n    }\n\n    render() {     \n        return (\n            <Container>\n                <AlertErrors errors={this.state.errors}/>\n                {this.state.registered? <Alert variant=\"success\">Registration compete. Please login.</Alert>:null}\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control\n                            type=\"email\" \n                            placeholder=\"Enter email\"\n                            name=\"email\"\n                            onChange={this.handleChange}\n                        />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control \n                            type=\"password\" \n                            placeholder=\"Password\"\n                            name=\"password\"\n                            onChange={this.handleChange}                        \n                        />\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\" block>\n                        Login\n                    </Button>\n                </Form> \n            </Container>          \n        );\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loggedIn: state.auth.authorized\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        authorized: params =>  dispatch(authorized(params))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login));","import React, { Component } from 'react';\nimport { Button, Form, Container } from \"react-bootstrap\";\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\n\nimport AlertErrors from '../components/AlertErrors';\n\nclass SignUp extends Component {\n\n    state = {\n        profile: {\n            first_name: '',\n            last_name: '',\n            email: '',\n            password: ''\n        },\n        errors: []\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        axios.post('/api/users', this.state.profile)\n        .then(results => {\n            if(results.data) {\n                this.setState((prevState) => {\n                    return {\n                        ...prevState,\n                        error: []\n                    }\n                });\n                this.props.history.push({\n                    pathname: '/',\n                    search:'?registered=true'\n                });\n            }\n        })\n        .catch(err => {\n            console.log(err.response.data.error);\n            let errors = [{\n                message: 'Something went wrong, please try again'\n            }];               \n            if(err.response.status === 400 && err.response.data.error) {\n                errors = err.response.data.error;\n            }\n            this.setState((prevState) => {\n                return {\n                    ...prevState,\n                    errors\n                }\n            });\n        });\n    }\n\n    handleChange = event => {\n        const state = {...this.state};\n        state.profile[event.target.name] = event.target.value;\n        this.setState(state);\n    }\n\n    render() {\n        return (\n            <Container>\n                <AlertErrors errors={this.state.errors}/>\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>First Name</Form.Label>\n                        <Form.Control \n                            type=\"text\" \n                            name=\"first_name\" \n                            placeholder=\"Enter First Name\"\n                            onChange={this.handleChange}\n                        />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Last Name</Form.Label>\n                        <Form.Control \n                            type=\"text\" \n                            name=\"last_name\" \n                            placeholder=\"Enter Last Name\" \n                            onChange={this.handleChange}\n                        />\n                    </Form.Group>                    \n\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control \n                            type=\"email\" \n                            name=\"email\" \n                            placeholder=\"Enter email\" \n                            onChange={this.handleChange}\n                        />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control \n                            type=\"password\" \n                            name=\"password\" \n                            placeholder=\"Password\" \n                            onChange={this.handleChange}\n                        />\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\" block>\n                        Sign Up\n                    </Button>\n                </Form> \n            </Container>\n        );\n    }\n\n}\n\nexport default withRouter(SignUp);","import React, { Component } from 'react';\nimport AlertErrors from '../components/AlertErrors';\nimport { Button, Form, Container, Alert } from \"react-bootstrap\";\nimport { connect } from 'react-redux';\nimport { authorized } from '../store/actions/auth';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\n \nclass Profile extends Component {\n\n    state = {\n        profile: {\n            first_name: '',\n            last_name: '',\n            email: ''\n        },\n        errors: [],\n        success: false\n    }\n\n    componentDidMount() {\n        if(this.props.loggedIn) {\n            axios.get('/api/users')\n            .then(results => {            \n                const {first_name, last_name, email} = results.data;\n                this.setState({\n                    profile: {\n                        first_name,\n                        last_name,\n                        email\n                    }\n                });\n            })\n            .catch(err => {\n                if(err.response.status === 401) {\n                    this.props.authorized(false);\n                    this.props.history.push({pathname:'/'});\n                }\n                console.log(err);\n            });\n        } else {\n            this.props.history.push({pathname:'/'});\n        }\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        axios.patch('/api/users', this.state.profile)\n        .then(results => {\n            if(results.data) {\n                this.setState((prevState) => {\n                    return {\n                        ...prevState,\n                        errors: [],\n                        success: true\n                    }\n                });\n            }\n        })\n        .catch(err => {\n            console.log(err.response.data.error);\n            let errors = [{\n                message: 'Something went wrong, please try again'\n            }];               \n            if(err.response.status === 400 && err.response.data.error) {\n                errors = err.response.data.error;\n            }\n            this.setState((prevState) => {\n                return {\n                    ...prevState,\n                    errors,\n                    success: false\n                }\n            });\n        });\n    }\n\n    handleChange = event => {\n        const state = {...this.state};\n        state.profile[event.target.name] = event.target.value;\n        this.setState(state);\n    }\n\n    render() {\n        return (\n            <Container>\n                <AlertErrors errors={this.state.errors}/>\n                {this.state.success? <Alert variant=\"success\">Profile Updated.</Alert>:null}\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>First Name</Form.Label>\n                        <Form.Control\n                            type=\"text\" \n                            placeholder=\"Enter First Name\" \n                            name=\"first_name\"\n                            value={this.state.profile.first_name}\n                            onChange={this.handleChange}\n                        />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Last Name</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter Last Name\" \n                            name=\"last_name\"\n                            value={this.state.profile.last_name}\n                            onChange={this.handleChange}\n                        />\n                    </Form.Group>                    \n\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control \n                            type=\"email\" \n                            placeholder=\"Enter email\" \n                            name=\"email\"\n                            value={this.state.profile.email}\n                            onChange={this.handleChange}\n                        />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>New Password</Form.Label>\n                        <Form.Control \n                            type=\"password\"\n                            placeholder=\"Password\" \n                            name=\"password\"\n                            autocomplete=\"off\"\n                            onChange={this.handleChange}                            \n                        />\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\" block>\n                        Sign Up\n                    </Button>\n                </Form> \n            </Container>          \n        );\n    }\n\n}\nconst mapStateToProps = (state) => {\n    return {\n        loggedIn: state.auth.authorized\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        authorized: params =>  dispatch(authorized(params))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Profile));","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport Navigation from './components/Navigation';\nimport Login from './pages/Login';\nimport SignUp from './pages/SignUp';\nimport Profile from './pages/Profile';\n\nfunction App() {\n  return (\n    <main className=\"main\">\n        <nav className=\"main-nav\">\n          <Navigation />\n        </nav>\n        <Route path=\"/signup\" exact component={SignUp} />\n        <Route path=\"/profile\" exact component={Profile} />\n        <Route path=\"/\" exact component={Login} />        \n    </main>    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { AUTHORIZED } from '../actions/actionTypes';\n\nconst initialState = {\n    authorized: false \n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case AUTHORIZED:\n            return {\n                ...state,\n                authorized: action.authorized\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import { createStore, combineReducers } from 'redux';\n\nimport authReducer from './reducers/auth';\n\nconst rootReducer = combineReducers({\n    auth: authReducer\n});\n\nconst configureStore = () => {\n    return createStore(rootReducer);\n};\n\nexport default configureStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\n\nconst app = (\n    <BrowserRouter>\n        <Provider store={configureStore()}>\n            <App/>\n        </Provider>\n    </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}